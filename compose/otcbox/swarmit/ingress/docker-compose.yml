---
services:
  http-code-pages:
    env_file: .env.http-code-pages
    image: registry.${SWARMIT_INGRESS_BASE_DOMAIN}/asset/http-code-pages:${SWARMIT_IMAGES_IMAGE_TAG}
    labels:
      - com.swarmit.version=0.1
      - traefik.enable=true
      - traefik.constraint-label=traefik-public
      - traefik.swarm.network=${SWARMIT_INFRA}_public_http_codes
      - traefik.http.services.error-pages.loadbalancer.server.port=8080
      - com.swarmit.project=otcbox
      - com.swarmit.asset=otcbox_swarmit_ingress_http-code-pages
      - com.swarmit.feature.images.enabled=True
      - com.swarmit.images.version=alpha-0.1
      - com.swarmit.feature.core.enabled=True
      - com.swarmit.core.version=alpha-0.1
      - com.swarmit.feature.ingress.enabled=True
      - com.swarmit.ingress.version=alpha-0.1
      - traefik.http.routers.otcbox_swarmit_ingress_http-code-pages.entrypoints=web-secure
      - traefik.http.routers.otcbox_swarmit_ingress_http-code-pages.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.otcbox_swarmit_ingress_http-code-pages.priority=10
      - traefik.http.routers.otcbox_swarmit_ingress_http-code-pages.middlewares=ingress-errors@file
    deploy:
      endpoint_mode: dnsrr
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 2
        delay: 10s
        failure_action: rollback
        order: stop-first
      placement:
        constraints:
          - node.role == manager
    healthcheck:
      test: ['CMD', '/bin/error-pages', 'healthcheck']
      interval: 2s
      timeout: 1s
      retries: 50
      start_period: 2s
    environment:
      INFRA_INGRESS_DOMAIN: ".${SWARMIT_INGRESS_BASE_DOMAIN}"
      INFRA_INGRESS_URL: "https://${SWARMIT_INGRESS_BASE_DOMAIN}"
      SERVICE_INGRESS_DOMAIN: "http-code-pages.${SWARMIT_INGRESS_BASE_DOMAIN}"
      SERVICE_INGRESS_URL: "https://http-code-pages.${SWARMIT_INGRESS_BASE_DOMAIN}"
      SWARMIT_BOX: "swarmit"
      SWARMIT_CORE_ENABLED: "[]"
      SWARMIT_IMAGES_ENABLED: "[]"
      SWARMIT_IMAGES_IMAGE_TAG: "${SWARMIT_IMAGES_IMAGE_TAG}"
      SWARMIT_IMAGES_REGISTRY_DOMAIN: "${SWARMIT_IMAGES_REGISTRY_DOMAIN}"
      SWARMIT_IMAGES_REGISTRY_URL: "${SWARMIT_IMAGES_REGISTRY_URL}"
      SWARMIT_INFRA: "${SWARMIT_INFRA}"
      SWARMIT_INFRA_DOMAIN: "${SWARMIT_INGRESS_BASE_DOMAIN}"
      SWARMIT_INGRESS_ASSET_DOMAIN: "True"
      SWARMIT_INGRESS_BASE_DOMAIN: "${SWARMIT_INGRESS_BASE_DOMAIN}"
      SWARMIT_INGRESS_BOX_DOMAIN: "True"
      SWARMIT_INGRESS_DASHBOARD: "True"
      SWARMIT_INGRESS_ERROR_PAGES: "True"
      SWARMIT_INGRESS_INFRA_DOMAIN: "True"
      SWARMIT_INGRESS_LE_CHALLENGE_TYPE: "unset"
      SWARMIT_INGRESS_LE_DNS_CHALLENGE_DELAY: "5"
      SWARMIT_INGRESS_LE_DNS_ENV_NAME: ""
      SWARMIT_INGRESS_LE_DNS_KEY: "secret"
      SWARMIT_INGRESS_LE_DNS_PROVIDER: ""
      SWARMIT_INGRESS_LE_DOMAIN: "${SWARMIT_INGRESS_BASE_DOMAIN}"
      SWARMIT_INGRESS_LE_EMAIL: "mail@${SWARMIT_INGRESS_BASE_DOMAIN}"
      SWARMIT_INGRESS_LE_ENABLE: "False"
      SWARMIT_INGRESS_LOG_LEVEL: "ERROR"
      SWARMIT_INGRESS_MAIL_DOMAIN: "${SWARMIT_INGRESS_BASE_DOMAIN}"
      SWARMIT_INGRESS_PORT: "443"
      SWARMIT_INGRESS_PROTOCOL: "https://"
      SWARMIT_INGRESS_REPORTS: "True"
      SWARMIT_INGRESS_SERVICE_DOMAIN: "True"
      SWARMIT_INGRESS_SKIP_SSL_VERIFY: "${SWARMIT_INGRESS_SKIP_SSL_VERIFY}"
      SWARMIT_INGRESS_STACK_DOMAIN: "True"
      SWARMIT_LOGOHOST: "${SWARMIT_LOGOHOST}"
      SWARMIT_PATH: "/app/swarmit/"
      SWARMIT_PROVIDER: "swarm"
      SWARMIT_SERVICE: "http-code-pages"
      SWARMIT_SERVICE_DOMAIN: "http-code-pages.${SWARMIT_INGRESS_BASE_DOMAIN}"
      SWARMIT_STACK: "ingress"
      SWARMIT_VOLUMES_PATH: "${VOLUMES_FOLDER}"
    networks:
      otcbox_public_http_codes:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /run/containerd/containerd.sock:/run/containerd/containerd.sock
      - ${VOLUMES_FOLDER}/volumes/otcbox/swarmit/hooks:/var/lib/swarmit/hooks
      - /usr/share/zoneinfo/Europe/Berlin:/etc/localtime:ro
    logging:
      driver: json-file
      options:
        max-size: 40m
        max-file: 2
        mode: non-blocking
        max-buffer-size: 4m
  traefik:
    env_file: .env.traefik
    image: registry.${SWARMIT_INGRESS_BASE_DOMAIN}/asset/traefik:${SWARMIT_IMAGES_IMAGE_TAG}
    command:
      - --api.dashboard=true
      - --accessLog.filePath=/logs/access.log
      - --accessLog.fields.defaultMode=keep
      - --accessLog.fields.headers.defaultMode=keep
      - --serversTransport.forwardingTimeouts.idleConnTimeout=60s
      - --providers.docker.watch=true
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
      - --providers.docker.network=otcbox_public
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.file.directory=/etc/traefik/dyn-config
      - --providers.file.watch=true
      - --entrypoints.ping.address=:8082
      - --entrypoints.web.address=:80
      - --entrypoints.web.transport.respondingTimeouts.readTimeout=30m
      - --entrypoints.web.http.redirections.entryPoint.to=web-secure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web-secure.address=:443
      - --entrypoints.web-secure.transport.respondingTimeouts.readTimeout=30m
      - --entrypoints.web-secure.forwardedHeaders.insecure=true
      - --entrypoints.web-secure.proxyProtocol.insecure=true
      - --entrypoints.fsync.address=:9932
      - --entrypoints.fsync.proxyProtocol.insecure=true
      - --entrypoints.git.address=:9922
      - --entrypoints.git.proxyProtocol.insecure=true
      - --entrypoints.sftpgo.address=:9912
      - --entrypoints.sftpgo.proxyProtocol.insecure=true
      - --log.level=${SWARMIT_INGRESS_LOG_LEVEL}
      - --ping
    labels:
      - com.swarmit.version=0.1
      - com.swarmit.project=otcbox
      - com.swarmit.asset=otcbox_swarmit_ingress_traefik
      - com.swarmit.feature.images.enabled=True
      - com.swarmit.images.version=alpha-0.1
      - com.swarmit.feature.core.enabled=True
      - com.swarmit.core.version=alpha-0.1
      - com.swarmit.feature.ingress.enabled=True
      - com.swarmit.ingress.version=alpha-0.1
      - com.swarmit.asset.isPublic=True
      - traefik.constraint-label=traefik-public
      - traefik.http.services.otcbox_swarmit_ingress_traefik.loadbalancer.server.port=8080
      - traefik.http.routers.otcbox_swarmit_ingress_traefik.tls=true
      - traefik.http.routers.otcbox_swarmit_ingress_traefik.entrypoints=web-secure
      - traefik.http.middlewares.auth.basicauth.usersfile=/etc/traefik/dbusers
      - traefik.http.routers.otcbox_swarmit_ingress_traefik.middlewares=auth,ingress-errors@file
      - traefik.http.routers.otcbox_swarmit_ingress_traefik.rule=Host(`proxy.${SWARMIT_INGRESS_BASE_DOMAIN}`) && (PathPrefix(`/dashboard/`) || PathPrefix(`/api/`))
      - traefik.http.routers.otcbox_swarmit_ingress_traefik.service=api@internal
    deploy:
      endpoint_mode: dnsrr
      mode: global
      restart_policy:
        condition: on-failure
        delay: 0s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 2
        delay: 0s
        failure_action: rollback
        order: start-first
      placement:
        constraints:
          - node.role == manager
    ports:
      - published: 80
        target: 80
        mode: host
      - published: 443
        target: 443
        mode: host
      - published: 8080
        target: 8080
        mode: host
      - published: 9912
        target: 9912
        mode: host
      - published: 9922
        target: 9922
        mode: host
      - published: 9923
        target: 9923
        mode: host
    healthcheck:
      test: ['CMD', 'traefik', 'healthcheck', '--ping']
      interval: 2s
      timeout: 1s
      retries: 50
      start_period: 2s
    environment:
      INFRA_INGRESS_DOMAIN: ".${SWARMIT_INGRESS_BASE_DOMAIN}"
      INFRA_INGRESS_URL: "https://${SWARMIT_INGRESS_BASE_DOMAIN}"
      SERVICE_INGRESS_DOMAIN: "proxy.${SWARMIT_INGRESS_BASE_DOMAIN}"
      SERVICE_INGRESS_URL: "https://proxy.${SWARMIT_INGRESS_BASE_DOMAIN}/dashboard/"
      SWARMIT_BOX: "swarmit"
      SWARMIT_CORE_ENABLED: "[]"
      SWARMIT_IMAGES_ENABLED: "[]"
      SWARMIT_IMAGES_IMAGE_TAG: "${SWARMIT_IMAGES_IMAGE_TAG}"
      SWARMIT_IMAGES_REGISTRY_DOMAIN: "${SWARMIT_IMAGES_REGISTRY_DOMAIN}"
      SWARMIT_IMAGES_REGISTRY_URL: "${SWARMIT_IMAGES_REGISTRY_URL}"
      SWARMIT_INFRA: "${SWARMIT_INFRA}"
      SWARMIT_INFRA_DOMAIN: "${SWARMIT_INGRESS_BASE_DOMAIN}"
      SWARMIT_INGRESS_ASSET_DOMAIN: "True"
      SWARMIT_INGRESS_BASE_DOMAIN: "${SWARMIT_INGRESS_BASE_DOMAIN}"
      SWARMIT_INGRESS_BOX_DOMAIN: "True"
      SWARMIT_INGRESS_DASHBOARD: "True"
      SWARMIT_INGRESS_DOMAINS: "plantuml.${SWARMIT_INGRESS_BASE_DOMAIN} mermaid.${SWARMIT_INGRESS_BASE_DOMAIN} act-runner.${SWARMIT_INGRESS_BASE_DOMAIN} gitea-db.${SWARMIT_INGRESS_BASE_DOMAIN} git.${SWARMIT_INGRESS_BASE_DOMAIN} registry.${SWARMIT_INGRESS_BASE_DOMAIN} images.${SWARMIT_INGRESS_BASE_DOMAIN} logs.${SWARMIT_INGRESS_BASE_DOMAIN} http-code-pages.${SWARMIT_INGRESS_BASE_DOMAIN} proxy.${SWARMIT_INGRESS_BASE_DOMAIN}"
      SWARMIT_INGRESS_ERROR_PAGES: "True"
      SWARMIT_INGRESS_INFRA_DOMAIN: "True"
      SWARMIT_INGRESS_LE_CHALLENGE_TYPE: "unset"
      SWARMIT_INGRESS_LE_DNS_CHALLENGE_DELAY: "5"
      SWARMIT_INGRESS_LE_DNS_ENV_NAME: ""
      SWARMIT_INGRESS_LE_DNS_KEY: "secret"
      SWARMIT_INGRESS_LE_DNS_PROVIDER: ""
      SWARMIT_INGRESS_LE_DOMAIN: "${SWARMIT_INGRESS_BASE_DOMAIN}"
      SWARMIT_INGRESS_LE_EMAIL: "mail@${SWARMIT_INGRESS_BASE_DOMAIN}"
      SWARMIT_INGRESS_LE_ENABLE: "False"
      SWARMIT_INGRESS_LOG_LEVEL: "ERROR"
      SWARMIT_INGRESS_MAIL_DOMAIN: "${SWARMIT_INGRESS_BASE_DOMAIN}"
      SWARMIT_INGRESS_NETWORK: "otcbox_public"
      SWARMIT_INGRESS_PORT: "443"
      SWARMIT_INGRESS_PROTOCOL: "https://"
      SWARMIT_INGRESS_REPORTS: "True"
      SWARMIT_INGRESS_SERVICE_DOMAIN: "True"
      SWARMIT_INGRESS_SKIP_SSL_VERIFY: "${SWARMIT_INGRESS_SKIP_SSL_VERIFY}"
      SWARMIT_INGRESS_STACK_DOMAIN: "True"
      SWARMIT_INGRESS_URLS: "https://plantuml.${SWARMIT_INGRESS_BASE_DOMAIN} https://mermaid.${SWARMIT_INGRESS_BASE_DOMAIN} https://git.${SWARMIT_INGRESS_BASE_DOMAIN} https://registry.${SWARMIT_INGRESS_BASE_DOMAIN} https://images.${SWARMIT_INGRESS_BASE_DOMAIN} https://logs.${SWARMIT_INGRESS_BASE_DOMAIN} https://proxy.${SWARMIT_INGRESS_BASE_DOMAIN}/dashboard/ https://proxy.${SWARMIT_INGRESS_BASE_DOMAIN}/api/"
      SWARMIT_LOGOHOST: "${SWARMIT_LOGOHOST}"
      SWARMIT_PATH: "/app/swarmit/"
      SWARMIT_PROVIDER: "swarm"
      SWARMIT_SERVICE: "traefik"
      SWARMIT_SERVICE_DOMAIN: "proxy.${SWARMIT_INGRESS_BASE_DOMAIN}"
      SWARMIT_STACK: "ingress"
      SWARMIT_VOLUMES_PATH: "${VOLUMES_FOLDER}"
    networks:
      otcbox_public:
      otcbox_public_http_codes:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /run/containerd/containerd.sock:/run/containerd/containerd.sock
      - ${VOLUMES_FOLDER}/volumes/otcbox/swarmit/hooks:/var/lib/swarmit/hooks
      - /usr/share/zoneinfo/Europe/Berlin:/etc/localtime:ro
      - ${VOLUMES_FOLDER}/volumes/otcbox/swarmit/ingress/traefik/acme.json:/acme.json:rw
      - ${VOLUMES_FOLDER}/volumes/otcbox/swarmit/ingress/traefik/access.log:/logs/access.log
      # secrets as volumes
      - ${SECRETS_FOLDER}/secrets/otcbox/swarmit/ingress/traefik/ingress_admin.secret:/run/secrets/secret
      # configs as volumes
      - ${CONFIGS_FOLDER}/configs/otcbox/swarmit/ingress/traefik/dynamic/dynamic.yml.config:/etc/traefik/dyn-config/dynamic.yml
      - ${CONFIGS_FOLDER}/configs/otcbox/swarmit/ingress/traefik/users/dbusers-c8ca.config:/etc/traefik/dbusers
      - ${CONFIGS_FOLDER}/configs/otcbox/swarmit/ingress/traefik/ingress_cert/local.crt.config:/certs/local.crt
      - ${CONFIGS_FOLDER}/configs/otcbox/swarmit/ingress/traefik/ingress_certkey/local.key.config:/certs/local.key
    logging:
      driver: json-file
      options:
        max-size: 40m
        max-file: 2
        mode: non-blocking
        max-buffer-size: 4m
networks:
  otcbox_public:
    external: true
  otcbox_public_http_codes:
    external: true