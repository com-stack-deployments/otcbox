# URL to logohost
# Set by: config/swarmit
export SWARMIT_LOGOHOST="${SWARMIT_LOGOHOST}"
# Define the image tag to set, when image names are calculated
# Set by: config/swarmit
export SWARMIT_IMAGES_IMAGE_TAG="${SWARMIT_IMAGES_IMAGE_TAG}"
# Domain to set for deployment
# Set by: config/swarmit
export SWARMIT_INGRESS_BASE_DOMAIN="${SWARMIT_INGRESS_BASE_DOMAIN}"
# Enable cert creation using letsencrypt (otherwise, self-signed will be created and used)
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_ENABLE="False"
# Type of challenge you want to use for letsencrypt
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_CHALLENGE_TYPE="unset"
# Provider to use for letsencrypt when using dns-challenge
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_DNS_PROVIDER=""
# DNS key to use for letsencrypt (will be stored as a secret)
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_DNS_KEY="secret"
# Name of environment key to expose as required by selected dns-challenge provider
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_DNS_ENV_NAME=""
# Sets 'defaultBeforeCheck' paraneter in Traefik for dns-challenge
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_DNS_CHALLENGE_DELAY="5"
# Sets 'insecureSkipVerify' paraneter in Traefik
# Set by: config/swarmit
export SWARMIT_INGRESS_SKIP_SSL_VERIFY="${SWARMIT_INGRESS_SKIP_SSL_VERIFY}"
# Loglevel for Traefik
# Set by: config/swarmit
export SWARMIT_INGRESS_LOG_LEVEL="ERROR"
# Define what will be the ingress incoming port
# Set by: config/swarmit
export SWARMIT_INGRESS_PORT="443"
# Name of this swarmit asset
# Set by: internally/swarmit
export SWARMIT_INFRA="${SWARMIT_INFRA}"
# Name of this swarmit asset
# Set by: internally/swarmit
export SWARMIT_BOX="intern"
# Name of this swarmit asset
# Set by: internally/swarmit
export SWARMIT_STACK="vcs"
# Database host to use
# Set by: service/gitea
export DB_HOST="gitea-db:3306"
# Name of database
# Set by: service/gitea
export DB_NAME="gitea"
# User password to use when connecting to DB
# Set by: service/gitea
export DB_PASSWD="IGNORED_SET_BY_SECRET"
# Datebase type to use as backend
# Set by: service/gitea
export DB_TYPE="mysql"
# Usernane to use when connecting to DB
# Set by: service/gitea
export DB_USER="gitea"
# Controls if gitea permits self-registration or not
# Set by: service/gitea
export DISABLE_REGISTRATION="False"
# Author for gitea meta (head section)
# Set by: service/gitea
export GITEA_AUTHOR="Daniel Schlieder"
# Configures how  many times gitea should try to connect to it's database
# Set by: service/gitea
export GITEA_DB_RETRIES="30"
# Configures timeout for database connection attempt(s)
# Set by: service/gitea
export GITEA_DB_RETRY_BACKOFF="6"
# Description for gitea meta (head section)
# Set by: service/gitea
export GITEA_DESCRIPTION="Comstack Internal VCS"
# Name of traefik entrypoint to use
# Set by: service/gitea
export GITEA_ENTRYPOINT="git"
# Configures text for Gitea's homepage
# Set by: service/gitea
export GITEA_HOME_TEXT="Your home for internal Comstack git repositories"
# Configures title for Gitea's homepage
# Set by: service/gitea
export GITEA_HOME_TITLE="ComStack CI/CD Haven"
# What port is configured on your INGRESS to access giteas SSH port
# Set by: service/gitea
export GITEA_INGRESS_PORT="9922"
# Keywords for gitea meta (head section)
# Set by: service/gitea
export GITEA_KEYWORDS="ComputerStack Comstack Internal Intern"
# General log level. [Trace, Debug, Info, Warn, Error, Critical, Fatal, None]
# Set by: service/gitea
export GITEA_LOG_LEVEL="Error"
# Controls access to the installation page. When set to “true”, the installation page is not accessible.
# Set by: service/gitea
export INSTALL_LOCK="True"
# Provide the smtp server to use for gitea
# Set by: service/gitea
export MAIL_SERVER="mail-out"
# Enable this to force users to log in to view any page or to use API.
# Set by: service/gitea
export REQUIRE_SIGNIN_VIEW="True"
# Whether to enable a Service Worker to cache frontend assets.
# Set by: service/gitea
export USE_SERVICE_WORKER="False"
# Group ID to use when running container
# Set by: service/gitea
export USER_GID="1000"
# User ID to use when running container
# Set by: service/gitea
export USER_UID="1000"
# where to link to when user clicks "sign-in"
# Set by: service/gitea
export GITEA_DEFAULT_LOGIN_LINK="/user/login"
# Name of this swarmit asset
# Set by: internally/swarmit
export SWARMIT_SERVICE="gitea"
# URL for this service asset
# Set by: internally/gitea
export SERVICE_INGRESS_URL="https://git.${SWARMIT_INGRESS_BASE_DOMAIN}"
# Domain part for this service asset
# Set by: internally/gitea
export SERVICE_INGRESS_DOMAIN="git.${SWARMIT_INGRESS_BASE_DOMAIN}"
# Define service url to use for your registry
# Set by: config/swarmit
export SWARMIT_IMAGES_REGISTRY_URL="${SWARMIT_IMAGES_REGISTRY_URL}"
# Email address to use for letsencrypt
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_EMAIL="mail@${SWARMIT_INGRESS_BASE_DOMAIN}"
# Email address of admin user
# Set by: service/gitea
export GITEA_ADMIN_EMAIL="gitea-admin@${SWARMIT_INGRESS_BASE_DOMAIN}"
# Configures Gitea's root url
# Set by: service/gitea
export ROOT_URL="https://git.${SWARMIT_INGRESS_BASE_DOMAIN}"
# list of hosts to allow webhooks for
# Set by: service/gitea
export ALLOWED_HOST_LIST="$${DRONE_HOST},$${TAIGA_HOST}"
# set url for service plantuml
# Set by: service/gitea
export PLANTUML_URL="https://plantuml.${SWARMIT_INGRESS_BASE_DOMAIN}"
# set url for service mermaid
# Set by: service/gitea
export MERMAID_URL="https://mermaid.${SWARMIT_INGRESS_BASE_DOMAIN}"
# Mail-domain to set for deployment
# Set by: config/swarmit
export SWARMIT_INGRESS_MAIL_DOMAIN="${SWARMIT_INGRESS_MAIL_DOMAIN}"
# Domain to use for letsencrypt certs
# Set by: config/swarmit
export SWARMIT_INGRESS_LE_DOMAIN="${SWARMIT_INGRESS_BASE_DOMAIN}"
# Configures Gitea's application name
# Set by: service/gitea
export APP_NAME="${SWARMIT_INFRA}"
