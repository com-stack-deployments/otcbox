APP_NAME = ${GITEA_HOME_TITLE}
RUN_MODE = prod
RUN_USER = git
WORK_PATH=/data/gitea
[actions]
ENABLED=true
[repository]
ROOT = /data/git/repositories
ENABLE_PUSH_CREATE_USER = true
ENABLE_PUSH_CREATE_ORG = true

[repository.local]
LOCAL_COPY_PATH = /data/gitea/tmp/local-repo

[repository.upload]
TEMP_PATH = /data/gitea/uploads

[server]
APP_DATA_PATH    = /data/gitea
DOMAIN           = git.${SWARMIT_INGRESS_BASE_DOMAIN}
SSH_DOMAIN       = git.${SWARMIT_INGRESS_BASE_DOMAIN}
HTTP_PORT        = 3000
ROOT_URL         = ${ROOT_URL}
DISABLE_SSH      = false
SSH_PORT         = ${GITEA_INGRESS_PORT}
START_SSH_SERVER = true
SSH_LISTEN_PORT  = ${GITEA_INGRESS_PORT}
OFFLINE_MODE     = false

[database]
PATH     = /data/gitea/gitea.db
DB_TYPE  = ${DB_TYPE}
HOST     = ${DB_HOST}
NAME     = ${DB_NAME}
USER     = ${DB_USER}
PASSWD   = ${SEC_OTCBOX_INTERN_VCS_GITEA_DB_USER}
LOG_SQL  = false
SCHEMA   = 
SSL_MODE = disable
CHARSET  = utf8
DB_RETRY_BACKOFF = ${GITEA_DB_RETRY_BACKOFF}
DB_RETRIES  = ${GITEA_DB_RETRIES}

[indexer]
ISSUE_INDEXER_PATH = /data/gitea/indexers/issues.bleve

[session]
PROVIDER_CONFIG = /data/gitea/sessions
PROVIDER        = file

[picture]
AVATAR_UPLOAD_PATH            = /data/gitea/avatars
REPOSITORY_AVATAR_UPLOAD_PATH = /data/gitea/repo-avatars
DISABLE_GRAVATAR              = true
ENABLE_FEDERATED_AVATAR       = true

[attachment]
PATH = /data/gitea/attachments

[log]
ROOT_PATH = %(GITEA_WORK_DIR)/log
MODE = console
LEVEL = ${GITEA_LOG_LEVEL}
STACKTRACE_LEVEL = None
logger.router.MODE = ,
logger.xorm.MODE = ,
logger.access.MODE =

[log.console]
MODE = console
FLAGS = stdflags
PREFIX =
COLORIZE = true

[security]
INSTALL_LOCK   = true
SECRET_KEY     = 0DTPptL4BDuCj1v472gEEuC8ZqrLpyFxOUn6U64CA8SiXsV9Errf62hSMywYj142
INTERNAL_TOKEN = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYmYiOjE2MDkzNjU5NzV9.VoXTV5mz8c3KqxVdNCzKGr4Eg8R-VcWqIgh0CZ7U3tM

[service]
DISABLE_REGISTRATION              = false
REQUIRE_SIGNIN_VIEW               = false
REGISTER_EMAIL_CONFIRM            = true
ENABLE_NOTIFY_MAIL                = true
ALLOW_ONLY_EXTERNAL_REGISTRATION  = true
ENABLE_CAPTCHA                    = false
DEFAULT_KEEP_EMAIL_PRIVATE        = false
DEFAULT_ALLOW_CREATE_ORGANIZATION = false
DEFAULT_ENABLE_TIMETRACKING       = false
NO_REPLY_ADDRESS                  = 

[oauth2]
JWT_SECRET = f_wDaDl0WNGC24K7wAGdbKSqCwGVusLuNER77JzTQnA



[mailer]
ENABLED = true
SMTP_ADDR   = ${MAIL_SERVER}
SMTP_PORT   = 25
FROM    = gitea-admin@$${SWARMIT_INGRESS_MAIL_DOMAIN}
USER    = 
PASSWD  = 


[openid]
ENABLE_OPENID_SIGNIN = true
ENABLE_OPENID_SIGNUP = false


[oauth2_client]
ENABLE_AUTO_REGISTRATION = true
;USERNAME = nickname
ACCOUNT_LINKING = auto


[migrations]
;ALLOW_LOCALNETWORKS = true

[webhook]
ALLOWED_HOST_LIST = ${ALLOWED_HOST_LIST}


[markup.sanitizer.svg.fill]
; The following keys can be used multiple times to define sanitation policy rules.
ELEMENT = svg
ALLOW_ATTR = fill


[markup.sanitizer.div.class]
; The following keys can be used multiple times to define sanitation policy rules.
ELEMENT = div
ALLOW_ATTR = class

[markup.sanitizer.i.class]
; The following keys can be used multiple times to define sanitation policy rules.
ELEMENT = i
ALLOW_ATTR = class

[markup.sanitizer.i.style]
; The following keys can be used multiple times to define sanitation policy rules.
ELEMENT = i
ALLOW_ATTR = style

[markup.sanitizer.a.class]
; The following keys can be used multiple times to define sanitation policy rules.
ELEMENT = a
ALLOW_ATTR = class

[markup.sanitizer.table.class]
; The following keys can be used multiple times to define sanitation policy rules.
ELEMENT = table
ALLOW_ATTR = class

[markup.sanitizer.div.style]
; The following keys can be used multiple times to define sanitation policy rules.
ELEMENT = div
ALLOW_ATTR = style

[markup.sanitizer.small.class]
; The following keys can be used multiple times to define sanitation policy rules.
ELEMENT = small
ALLOW_ATTR = class

[markup.sanitizer.img.width]
; The following keys can be used multiple times to define sanitation policy rules.
ELEMENT = img
ALLOW_ATTR = width

[markup.sanitizer.img.height]
; The following keys can be used multiple times to define sanitation policy rules.
ELEMENT = img
ALLOW_ATTR = height

[markup.sanitizer.label.for]
; The following keys can be used multiple times to define sanitation policy rules.
ELEMENT = label
ALLOW_ATTR = for

[markup.sanitizer.label.style]
; The following keys can be used multiple times to define sanitation policy rules.
ELEMENT = label
ALLOW_ATTR = style

[markup.sanitizer.input.id]
; The following keys can be used multiple times to define sanitation policy rules.
ELEMENT = input
ALLOW_ATTR = id

[ui.meta]
AUTHOR = ${GITEA_AUTHOR}
DESCRIPTION = ${GITEA_DESCRIPTION}
KEYWORDS = ${GITEA_KEYWORDS}
